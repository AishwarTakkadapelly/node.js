name: CI/CD Pipeline for Node.js Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Build Docker image
      run: docker build -t node .

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker image to Docker Hub
      run: docker tag node ${{ secrets.DOCKER_USERNAME }}/node:latest && docker push ${{ secrets.DOCKER_USERNAME }}/node:latest

  deploy-job:
  stage: deploy
  environment: production
  script:
    - echo "Deploying application..."
    - chmod 400 ${SSH_PRIVATE_KEY}
    - apt-get update -qq && apt-get install -qqy openssh-client
    - |
      ssh -o StrictHostKeyChecking=no -i ${SSH_PRIVATE_KEY} ec2-user@${EC2_PUBLIC_IP} "\
        set -e && \
        sudo yum install -y docker && \
        sudo systemctl start docker && \
        sudo systemctl enable docker && \
        sudo usermod -aG docker \$USER && \
        sudo newgrp docker && \
        container_ids=$(docker ps -aq) && \
        sudo docker stop petclinic || true && sudo docker rm petclinic || true && \
        docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD} && \
        docker pull ${IMAGE_NAME}:${IMAGE_TAG} && \
        docker run -d --name petclinic -p 8080:8080 ${IMAGE_NAME}:${IMAGE_TAG}"