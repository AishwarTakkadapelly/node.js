name: CI/CD Pipeline for Node.js Application

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Install dependencies
      run: npm install

    - name: Build Docker image
      run: docker build -t node .

    - name: Login to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Push Docker image to Docker Hub
      run: |
        docker tag node ${{ secrets.DOCKER_USERNAME }}/node:latest
        docker push ${{ secrets.DOCKER_USERNAME }}/node:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build  # Make sure deploy only runs after build

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Ensure Docker is installed
            if ! command -v docker &> /dev/null; then
              echo "Docker not found, installing..."
              sudo yum update -y
              sudo yum install -y docker
              sudo systemctl start docker
              sudo systemctl enable docker
              sudo usermod -aG docker ${{ secrets.EC2_USER }}
            fi

            # Pull Docker image and run container
            echo "Pulling Docker image..."
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/node:latest
    
            # Stop and remove any running container with the same name
            if [ "$(sudo docker ps -a -q -f name=my-app)" ]; then
              echo "Stopping and removing existing container..."
              sudo docker stop node || true
              sudo docker rm node || true
            fi
 
            # Run new container
            echo "Running new container..."
            sudo docker run -d -p 3333:3333 --name node ${{ secrets.DOCKER_USERNAME }}/node:latest
